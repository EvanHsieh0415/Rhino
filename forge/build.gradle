architectury {
	platformSetupLoomIde()
	forge()
}

configurations {
	developmentForge.extendsFrom common
}

loom {
	accessWidenerPath = project(":common").file("src/main/resources/rhino.accesswidener")
	forge {
		convertAccessWideners = true
		extraAccessWideners.add("rhino.accesswidener")
		mixinConfigs = [
				"rhino-common.mixins.json"
		]
	}
}

dependencies {
	forge("net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}")

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	bundle(project(path: ":common", configuration: "transformProductionForge")) { transitive false }
}

processResources {
	def toReplace = [
			"version"             : project.version
	]

	inputs.properties toReplace
	filesMatching("META-INF/mods.toml") {
		expand toReplace
	}
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

if (ENV.CURSEFORGE_KEY) {
	curseforge {
		apiKey = ENV.CURSEFORGE_KEY
		project {
			id = project.curseforge_id
			releaseType = project.artifact_type
			addGameVersion "Forge"
			addGameVersion "1.18.2"
			mainArtifact(remapJar.archivePath)
			changelog = getGitChangelog
			changelogType = 'markdown'
		}
	}
}

if(ENV.MODRINTH_TOKEN) {
	modrinth {
		token = ENV.MODRINTH_TOKEN
		projectId = rootProject.modrinth_id
		versionType = "$rootProject.artifact_type"
		versionNumber = "$project.version+$project.name"
		versionName = "[Forge] $project.version"
		changelog = getGitChangelog()
		uploadFile = remapJar
		gameVersions = ["1.18.2"]
		loaders = ["forge"]
	}
}

publishing {
	publications {
		mavenForge(MavenPublication) {
			artifactId = "${rootProject.archives_base_name}-${project.name}"
			from components.java
		}
	}

	repositories {
		if (ENV.FTB_MAVEN_TOKEN) {
			maven {
				url "https://maven.ftb.dev/release"
				credentials {
					username = "latvian"
					password = "${ENV.FTB_MAVEN_TOKEN}"
				}
			}
		}

		if (ENV.SAPS_TOKEN) {
			maven {
				url "https://maven.saps.dev/minecraft"
				credentials {
					username = "latvian"
					password = "${ENV.SAPS_TOKEN}"
				}
			}
		}
	}
}