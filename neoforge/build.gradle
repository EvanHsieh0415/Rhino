plugins {
	id 'me.shedaniel.unified-publishing'
}

architectury {
	platformSetupLoomIde()
	neoForge()
}

configurations {
	developmentNeoForge.extendsFrom common
}

loom {
	accessWidenerPath = project(":common").file("src/main/resources/rhino.accesswidener")

	interfaceInjection {
		interfaceInjectionSourceSets.add project(':common').sourceSets.main
	}
}

repositories {
	maven {
		url "https://maven.neoforged.net/releases"
	}
}

dependencies {
	neoForge("net.neoforged:neoforge:${rootProject.forge_version}")

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	bundle(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive false }
}

processResources {
	def toReplace = [
			"version": project.version
	]

	inputs.properties toReplace
	filesMatching("META-INF/mods.toml") {
		expand toReplace
	}
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

remapJar {
	atAccessWideners.add "rhino.accesswidener"
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

unifiedPublishing {
	project {
		releaseType = rootProject.artifact_type
		gameVersions = Arrays.asList(rootProject.supported_versions.split(','))
		gameLoaders = ["neoforge"]
		displayName = "$mod_name NeoForge $project.version"
		changelog = getGitChangelog()
		mainPublication remapJar

		if (ENV.CURSEFORGE_KEY) {
			curseforge {
				token = ENV.CURSEFORGE_KEY
				id = project.curseforge_id
			}
		}

		if (ENV.MODRINTH_TOKEN) {
			modrinth {
				token = ENV.MODRINTH_TOKEN
				id = project.modrinth_id
				version = "$project.version+$project.name"
			}
		}
	}
}

publishing {
	publications {
		mavenNeoForge(MavenPublication) {
			artifactId = "${rootProject.archives_base_name}-neoforge"
			from components.java
		}
	}

	repositories {
		if (ENV.MAVEN_TOKEN) {
			maven {
				url "https://maven.latvian.dev/releases"
				credentials {
					username = "lat"
					password = "${ENV.MAVEN_TOKEN}"
				}
			}
		}

		if (ENV.SAPS_TOKEN) {
			maven {
				url "https://maven.saps.dev/releases"
				credentials {
					username = "latvian"
					password = "${ENV.SAPS_TOKEN}"
				}
			}
		}
	}
}
